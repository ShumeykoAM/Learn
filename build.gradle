apply plugin: 'java'
apply plugin: 'war'

//repositories {
//    mavenCentral() //Не работает из за какой то лицензии, надо разобраться
//}

//Зависимости, зависимости задаются для конфигураций, у гредла по умолчанию несколько конфигураций
dependencies{
    //Для конфигурации testCompile  мы указываем зависимость, для импорта org.junit
    testCompile fileTree(dir: 'src/test/library', include: '*.jar')

    //compile project(':common')
    
    // https://mvnrepository.com/artifact/javax.validation/validation-api
    //compile group: 'javax.validation', name: 'validation-api', version: '2.0.0.Alpha1'
    compile fileTree(dir:'src/main/library')
    compile fileTree(dir:'src/library')
    
}

test.doFirst{
    copy {
        from ('src/test/resources/META-INF/beans.xml')
        into ('build/classes/test/META-INF')
    }
    copy {
        //Походу дела какой то косяк в Weld или во мне, но Weld всегда использует файл из main/META-INF
        from ('src/test/resources/META-INF/beans.xml')
        into ('build/classes/main/META-INF')
    }

}

//Скопируем файлы ресурсов что бы WeldContainer работал
build.doLast{
    //if (tasks.compileJava.didWork) {
        copy {
            from ('src/main/resources/META-INF/beans.xml')
            into ('build/classes/main/META-INF')
        }          
    //}
}

war {
    archiveName = "${warName}"
}

task runDeploy(dependsOn: 'war', type:Exec) {
    if ( System.getenv('GLASSFISH_HOME') == null) {
        println("WARNING: Deployment is not possible, cause not set environment variable GLASSFISH_HOME")
        enabled = false //Отключим таск, он не будет выполняться (doFist и doLast)
    } else {
        workingDir "${System.env.GLASSFISH_HOME}${File.separator}bin"
        if (System.properties['os.name'].toLowerCase().contains('windows')) {
            commandLine 'cmd', '/c', 'asadmin.bat'
        } else {
            commandLine "./asadmin"
        }
        args "deploy", "--force=true", "${war.archivePath}"
    }
    doLast{
        java.awt.Desktop.desktop.browse "http://localhost:8080/myserver".toURI()
    }
}

//Для idea, что бы имя варника правильное было
task runWar(dependsOn: 'war') {
}